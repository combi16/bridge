{"message":"Set BRIDGE_TOKEN to be the path of the bridge token binary","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":757,"byte_end":854,"line_start":20,"line_end":23,"column_start":59,"column_end":2,"is_primary":true,"text":[{"text":"const BRIDGE_TOKEN_BINARY: &'static [u8] = include_bytes!(std::env!(","highlight_start":59,"highlight_end":69},{"text":"    \"BRIDGE_TOKEN\",","highlight_start":1,"highlight_end":20},{"text":"    \"Set BRIDGE_TOKEN to be the path of the bridge token binary\"","highlight_start":1,"highlight_end":65},{"text":"));","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":757,"byte_end":854,"line_start":20,"line_end":23,"column_start":59,"column_end":2,"is_primary":false,"text":[{"text":"const BRIDGE_TOKEN_BINARY: &'static [u8] = include_bytes!(std::env!(","highlight_start":59,"highlight_end":69},{"text":"    \"BRIDGE_TOKEN\",","highlight_start":1,"highlight_end":20},{"text":"    \"Set BRIDGE_TOKEN to be the path of the bridge token binary\"","highlight_start":1,"highlight_end":65},{"text":"));","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"std::env!","def_site_span":{"file_name":"/home/gitpod/.rustup/toolchains/stable-2022-07-19-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":32674,"byte_end":32690,"line_start":947,"line_end":947,"column_start":5,"column_end":21,"is_primary":false,"text":[{"text":"    macro_rules! env {","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Set BRIDGE_TOKEN to be the path of the bridge token binary\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:20:59\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mconst BRIDGE_TOKEN_BINARY: &'static [u8] = include_bytes!(std::env!(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m___________________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"BRIDGE_TOKEN\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"Set BRIDGE_TOKEN to be the path of the bridge token binary\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
